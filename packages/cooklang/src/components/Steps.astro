---
import type { Step } from "@cooklang/cooklang-ts";

const { steps } = Astro.props;
---

<ol>
  {
    steps.map((stepParts: Step) => {
      return (
        <li>
          {stepParts.map((part) => {
            if (part.type === "text") {
              return part.value;
            }

            if (part.type === "ingredient") {
              const { name, quantity, units } = part;

              const details = [quantity, units].filter((item) => !!item);

              const text =
                details.length > 0
                  ? `${name} (${details.join(" ")})`
                  : `${name}`;

              return (
                <span data-quantity={quantity} data-units={units}>
                  {text}
                </span>
              );
            }

            if (part.type === "cookware") {
              const { name, quantity } = part;

              const text = !!quantity //
                ? `${name} (${quantity})`
                : `${name}`;

              return <span data-quantity={quantity}>{text}</span>;
            }

            if (part.type === "timer") {
              const { name, quantity, units } = part;

              const details = [quantity, units].filter((item) => !!item);

              const text = name
                ? `${details.join(" ")} (${name}))`
                : `${details.join(" ")}`;

              return (
                <span data-quantity={quantity} data-units={units}>
                  {text}
                </span>
              );
            }
          })}
        </li>
      );
    })
  }
</ol>
