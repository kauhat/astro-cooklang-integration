---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";

export async function getStaticPaths() {
  const recipeEntries = await getCollection("recipes");

  return recipeEntries.map((entry) => {
    return {
      params: { recipe: entry.slug },
      props: { entry },
    };
  });
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// You can access recipe data like this...
const { ingredients, metadata } = entry.data;

// But metadata is also top level...
const title = entry.data.title || entry.slug;
---

<Layout title={title}>
  <h1 slot="heading" class="text-3xl font-semibold">{title}</h1>

  <!-- Main -->
  <div class="prose w-full p-4">
    <Content />
  </div>

  <footer class="mt-auto p-4 text-center">
    <p class="text-neutral-600">
      Rendered with <code>&lt;Content /&gt;</code> component.
    </p>
  </footer>

  <!-- Debug section blocks -->
  <div slot="debug" class="p-4">
    <h3 class="mb-4 text-lg font-semibold">
      Ingredients (from collection entry data)
    </h3>

    <ul class="list-inside list-disc">
      {ingredients.map(({ name }) => <li>{name}</li>)}
    </ul>
  </div>

  <div slot="debug" class="p-4">
    <h3 class="mb-4 text-lg font-semibold">Metadata (from collection entry)</h3>

    <div class="whitespace-pre-wrap font-mono text-xs">
      {JSON.stringify(metadata, null, 4)}
    </div>
  </div>

  <div slot="debug" class="p-4">
    <h3 class="mb-4 text-lg font-semibold">Source (from collection entry)</h3>

    <div class="whitespace-pre-wrap font-mono text-xs">{entry.body}</div>
  </div>
</Layout>
